// notice: file automatically generated by rpcgen
// do not change it unless you know what you're doing

import { Client } from './client'

export const document = {
  hash : "{{ document.hash }}"
}

{% for i in struct %}
{% set ts = i.code(coder.typescript) %}
// {{ i.desc }}
export interface {{ ts.structName }} {
  {{ ts.structParams.join('\n    ') | safe }}
}
{% endfor %}

export class {{ util.toUpperCamelCase(name, "-") }} extends Client{
  static version: string = "{{ version }}"
  constructor(port, host, protocol, options){
    super(port, host, protocol, options)
  }
{%- for i in request -%}
{%- if i.dir === 0 -%}
  {% set ts = i.code(coder.typescript) %}
  // {{ i.desc }}
  public {{ ts.funcName }} ( {{ ts.funcParams.join(", ") | safe}} ): Promise<{{ ts.funcReturn | safe}}> {
    return this.request("{{ i.name }}", [ {{ ts.params.join(", ") }} ])
  }
{%- endif -%}
{%- endfor %}

  onClose(): void{
    super.onClose()
    const list: Array<string> = []
{%- for i in notification -%}
{% if i.dir === 1 %}
    list.push("{{ i.name }}")
{%- endif -%}
{%- endfor %}
    list.forEach(event => this.subscribe.removeAllListeners(event))
  }
}

